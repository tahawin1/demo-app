pipeline {
    agent any

    environment {
        IMAGE_NAME = 'monapp'
        IMAGE_TAG = 'latest'
        SONARQUBE_ENV = 'SonarQube'  // Le nom que tu as donn√© dans Jenkins
    }

    stages {

        stage('Execute') {
            steps {
                echo 'üõ†Ô∏è Ex√©cution initiale...'
                sh 'echo "Commande ex√©cut√©e avant build."'
            }
        }

        stage('Build') {
            steps {
                echo 'üì¶ Construction de l\'image Docker...'
                sh 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Ex√©cution des tests...'
                sh 'echo "Tests ex√©cut√©s (√† remplacer par de vrais tests)"'
            }
        }

        stage('SonarQube Scan') {
            steps {
                echo 'üîé Analyse SonarQube (SAST)...'
                withSonarQubeEnv("${SonarQube}") {
                    sh 'sonar-scanner'
                }
            }
        }

        stage('Scan') {
            steps {
                echo 'üîç Scan de s√©curit√© avec Trivy...'
                sh 'trivy image --severity CRITICAL,HIGH $IMAGE_NAME:$IMAGE_TAG'
            }
        }

        stage('Deploy') {
            steps {
                echo 'üöÄ D√©ploiement de l\'application...'
                sh 'docker rm -f monapp_container || true'
                sh 'docker run -d --name monapp_container -p 8888:80 $IMAGE_NAME:$IMAGE_TAG'
            }
        }
    }
}
